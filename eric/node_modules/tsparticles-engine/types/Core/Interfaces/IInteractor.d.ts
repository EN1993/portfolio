import type { IDelta } from "tsparticles-engine/types/Core/Interfaces/IDelta";
import type { IOptions } from "tsparticles-engine/types/Options/Interfaces/IOptions";
import type { IParticlesOptions } from "tsparticles-engine/types/Options/Interfaces/Particles/IParticlesOptions";
import type { InteractorType } from "tsparticles-engine/types/Enums/Types/InteractorType";
import type { Options } from "tsparticles-engine/types/Options/Classes/Options";
import type { Particle } from "tsparticles-engine/types/Core/Particle";
import type { ParticlesOptions } from "tsparticles-engine/types/Options/Classes/Particles/ParticlesOptions";
import type { RecursivePartial } from "tsparticles-engine/types/Types/RecursivePartial";
export interface IInteractor {
    loadOptions?: (options: Options, ...sources: (RecursivePartial<IOptions> | undefined)[]) => void;
    loadParticlesOptions?: (options: ParticlesOptions, ...sources: (RecursivePartial<IParticlesOptions> | undefined)[]) => void;
    type: InteractorType;
    clear(particle: Particle, delta: IDelta): void;
    init(): void;
    reset(particle: Particle): void;
}
