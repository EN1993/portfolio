import { CollisionMode } from "tsparticles-engine/types/Enums/Modes/CollisionMode";
import { CollisionsAbsorb } from "tsparticles-engine/types/Options/Classes/Particles/Collisions/CollisionsAbsorb";
import { CollisionsOverlap } from "tsparticles-engine/types/Options/Classes/Particles/Collisions/CollisionsOverlap";
import type { ICollisions } from "tsparticles-engine/types/Options/Interfaces/Particles/Collisions/ICollisions";
import type { IOptionLoader } from "tsparticles-engine/types/Options/Interfaces/IOptionLoader";
import { ParticlesBounce } from "tsparticles-engine/types/Options/Classes/Particles/Bounce/ParticlesBounce";
import type { RecursivePartial } from "tsparticles-engine/types/Types/RecursivePartial";
export declare class Collisions implements ICollisions, IOptionLoader<ICollisions> {
    absorb: CollisionsAbsorb;
    bounce: ParticlesBounce;
    enable: boolean;
    mode: CollisionMode | keyof typeof CollisionMode;
    overlap: CollisionsOverlap;
    constructor();
    load(data?: RecursivePartial<ICollisions>): void;
}
